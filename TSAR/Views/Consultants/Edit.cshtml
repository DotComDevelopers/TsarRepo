@model TSAR.Models.Consultant

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutOther.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Consultant</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ConsultantNum)

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4 col-md-offset-4">
                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            </div>
                <div class="col-md-4 col-md-offset-4">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label" })
            </div>
                <div class="col-md-4 col-md-offset-4">
                    @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.ConsultantAddress, htmlAttributes: new { @class = "control-label" })
            </div>
                <div class="col-md-4 col-md-offset-4">
                    @Html.EditorFor(model => model.ConsultantAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConsultantAddress, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            </div>
                <div class="col-md-4 col-md-offset-4">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.ConsultantType, htmlAttributes: new { @class = "control-label" })
            </div>
                <div class="col-md-4 col-md-offset-4">
                    @Html.EditorFor(model => model.ConsultantType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConsultantType, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.ComissionCode, htmlAttributes: new { @class = "control-label" })
            </div>
                <div class="col-md-4 col-md-offset-4">
                    @Html.EditorFor(model => model.ComissionCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ComissionCode, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
            </div>
                <div class="col-md-4 col-md-offset-4">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.RoleType, htmlAttributes: new { @class = "control-label" })
            </div>
                <div class="col-md-4 col-md-offset-4">
                    @Html.EditorFor(model => model.RoleType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleType, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


<div align="center">
    <a id="button" href="@Url.Action("Index")" class="btn btn-primary">Back To List</a>
</div>
@*<div>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
