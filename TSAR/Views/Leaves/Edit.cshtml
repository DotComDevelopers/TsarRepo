@model TSAR.Models.Leave

@{
  ViewBag.Title = "Edit";
  Layout = "~/Views/Shared/_LayoutOther.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Leave</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.LeaveId)

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.FirstName, new { @readonly = "readonly" })*@
            @Html.TextBoxFor(model => model.FirstName, (string)ViewBag.FirstName, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
            @*@Html.TextBoxFor(m => m.userCode, new { @readonly = "readonly" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApprovedBy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @if (Model.ApprovedBy == null)
            {
            <label class="form-control">Not Approved</label>
            }
            @if (Model.ApprovedBy != null)
            {
            @*<label>@ViewBag.ApprovedBy</label>*@
                @Html.TextBoxFor(model=>model.ApprovedBy, (string)ViewBag.ApprovedBy, htmlAttributes:new {@class = "form-control",@readonly="readonly"})
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LeaveDecsription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.LeaveDecsription, (string)ViewBag.LeaveDecsription, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AccumulatedLeave, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.AccumulatedLeave, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.AccumulatedLeaveString })
        </div>
    </div>
    
   
    <div class="form-group">
        @Html.LabelFor(model => model.AnnualBalance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.AnnualBalance, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.AnnualLeaveBal })
        </div>
    </div>
    
    @if (ViewBag.Gender == "Female")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.MaternityBalance, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.MaternityBalance, htmlAttributes: new {@class = "form-control", @readonly = "readonly", @Value = ViewBag.MaternityLeaveBal})
            </div>
        </div>
    }
    
    @if (ViewBag.Gender == "Male")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.PaternityBalance, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PaternityBalance, htmlAttributes: new {@class = "form-control", @readonly = "readonly", @Value = ViewBag.PaternityLeaveBal})
            </div>
        </div>
    }
    
    <div class="form-group">
        @Html.LabelFor(model => model.SickBalance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.SickBalance, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.SickLeaveBal })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.FamilyResponsibilityBalance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.FamilyResponsibilityBalance, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.FamilyLeaveBal })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.LeaveDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.LeaveDate, (string)ViewBag.LeaveDate, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ReturnDate, (string)ViewBag.ReturnDate, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
            <label></label>
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.AllocatedLeave, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.AllocatedLeave, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.AllocatedLeave })
            <label></label>
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.LeaveCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.LeaveCount, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.LeaveCount })
            <label></label>
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.LeaveTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.LeaveTypeName, (string)ViewBag.LeaveTypeName, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
            <label></label>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsConfirmed)
                @Html.ValidationMessageFor(model => model.IsConfirmed, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
