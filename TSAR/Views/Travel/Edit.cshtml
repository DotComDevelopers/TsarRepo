@model TSAR.Models.Travel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutOther.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Travel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TravelId)

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.Id, "Id", htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4 col-md-offset-4">
                @Html.DropDownList("Id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.MClientAddress, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4 col-md-offset-4">
                <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDYt9as2cjmqUnGKD5POvx0xegcT_z40tw&libraries=places" />
                <script type="text/javascript">
                    google.maps.event.addDomListener(window,
                        'load',
                        function () {
                            var places = new google.maps.places.Autocomplete(document.getElementById('ClientAddress'));
                            google.maps.event.addListener(places,
                                'place_changed',
                                function () {
                                    var place = places.getPlace();
                                    var address = place.formatted_address;
                                    var latitude = place.geometry.location.lat();
                                    var longitude = place.geometry.location.lng();
                                    var mesg = "Address: " + address;
                                    mesg += "\nLatitude: " + latitude;
                                    mesg += "\nLongitude: " + longitude;

                                });
                        });
                </script>

                @Html.EditorFor(model => model.MClientAddress, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.DropDownListFor(model => model.ClientAddress,new List<SelectListItem> { @ViewBag.Address}  ,"---Select---", new { @class = "form-control" })*@

                @Html.ValidationMessageFor(model => model.MClientAddress, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.TravelRate, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4 col-md-offset-4">
                @Html.EditorFor(model => model.TravelRate, new { htmlAttributes = new { @class = "form-control", @Value = "3.55" } })
                @Html.ValidationMessageFor(model => model.TravelRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div align="center">
                @Html.LabelFor(model => model.Distance, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4 col-md-offset-4">
                @Html.EditorFor(model => model.Distance, new { htmlAttributes = new { @class = "form-control", @Id = "Distance" } })
                @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-4">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
   
}

<div>
    <div align="center">
        <a id="button" href="@Url.Action("Index")" class="btn btn-primary">Back To List</a>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
