@model TSAR.Models.ManageTravel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutOther.cshtml";
}
<head>
    <!--Start of Zendesk Chat Script-->
    <script type="text/javascript">
        window.$zopim || (function (d, s) {
            var z = $zopim = function (c) { z._.push(c) }, $ = z.s =
            d.createElement(s), e = d.getElementsByTagName(s)[0]; z.set = function (o) {
                z.set.
                _.push(o)
            }; z._ = []; z.set._ = []; $.async = !0; $.setAttribute("charset", "utf-8");
            $.src = "https://v2.zopim.com/?4kX9439Xlk3AULQwEJ7mX7AUIsQVuohw"; z.t = +new Date; $.
            type = "text/javascript"; e.parentNode.insertBefore($, e)
        })(document, "script");
    </script>
    <!--End of Zendesk Chat Script-->
</head>
<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ManageTravel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TravelCode, htmlAttributes: new { @class = "col-md-2 col-md-offset-5" })
            <div class="col-md-offset-5 col-md-2">
                @Html.EditorFor(model => model.TravelCode, new { htmlAttributes = new { @class = "form-control", style = "text-transform:uppercase;" } })
                @Html.ValidationMessageFor(model => model.TravelCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rate, htmlAttributes: new { @class = "col-md-2 col-md-offset-5" })
            <div class="col-md-offset-5 col-md-2">
                @Html.EditorFor(model => model.rate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.distance, htmlAttributes: new { @class = "col-md-2 col-md-offset-5" })
            <div class="col-md-offset-5 col-md-2">
                @Html.EditorFor(model => model.distance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.distance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TravelFee, htmlAttributes: new { @class = "col-md-2 col-md-offset-5" })
            <div class="col-md-offset-5 col-md-2">
                @Html.EditorFor(model => model.TravelFee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TravelFee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div div align="center">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
